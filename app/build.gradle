import com.github.triplet.gradle.androidpublisher.ResolutionStrategy as GPPResolutionStrategy

buildscript {
    repositories {
        maven {
            url 'https://plugins.gradle.org/m2/'
        }
    }
    dependencies {
        classpath 'com.github.triplet.gradle:play-publisher:3.4.0'
        classpath "de.mannodermaus.gradle.plugins:android-junit5:1.10.0.0"
    }
}

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'com.diffplug.spotless'
apply plugin: 'com.github.triplet.play'
apply plugin: 'com.mikepenz.aboutlibraries.plugin'
apply plugin: "de.mannodermaus.android-junit5"

apply from: 'jacoco.gradle'

repositories {
    maven { url 'https://jitpack.io' }
}

android {
    compileSdk 34
    ndkVersion '21.3.6528147'

    defaultConfig {
        applicationId "tech.relaycorp.courier"
        minSdk 23
        targetSdk 34
        versionCode 1
        versionName project.findProperty("versionName") ?: "0.1"

        testInstrumentationRunner 'tech.relaycorp.courier.test.TestAndroidJUnitRunner'

        kapt {
            arguments {
                arg("room.schemaLocation", "$projectDir/schemas".toString())
                arg("room.incremental", "true")
            }
        }
    }

    signingConfigs {
        debug {}

        if (project.hasProperty('signingKeystorePath')) {
            release {
                storeFile file(signingKeystorePath)
                storePassword System.getenv("ANDROID_KEYSTORE_PASSWORD")
                keyAlias System.getenv("ANDROID_KEYSTORE_KEY_ALIAS")
                keyPassword System.getenv("ANDROID_KEYSTORE_KEY_PASSWORD")
            }
        }
    }

    buildTypes {
        debug {
            testCoverageEnabled true
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'

            if (project.hasProperty('signingKeystorePath')) {
                signingConfig signingConfigs.release
            }
        }
    }
    buildFeatures {
        viewBinding true
    }
    compileOptions {
        coreLibraryDesugaringEnabled true
        sourceCompatibility = JavaVersion.VERSION_17
        targetCompatibility = JavaVersion.VERSION_17
    }
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_17
    }
    packagingOptions {
        jniLibs {
            excludes += ['META-INF/*']
        }
        resources {
            excludes += ['META-INF/*']
        }
    }
    sourceSets {
        androidTest {
            java.srcDirs += "src/sharedTest/java"
            resources.srcDirs += "src/sharedTest/resources"
        }
        test {
            java.srcDirs += "src/sharedTest/java"
            resources.srcDirs += "src/sharedTest/resources"
        }
    }
    lint {
        abortOnError true
        checkAllWarnings true
        lintConfig file('lint.xml')
        warningsAsErrors true
    }
    namespace 'tech.relaycorp.courier'
}

dependencies {
    // Java 8
    coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:2.0.4'

    // Kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlinVersion"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$kotlinCoroutinesVersion"

    // Android
    implementation 'androidx.appcompat:appcompat:1.5.0'
    implementation 'androidx.core:core-ktx:1.8.0'
    implementation 'com.google.android.material:material:1.6.1'
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.5.1'
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.8.4'

    // Dependency Injection
    api 'com.google.dagger:dagger:2.48.1'
    kapt 'com.google.dagger:dagger-compiler:2.48.1'

    // Awala
    implementation 'tech.relaycorp:awala:1.66.4'
    implementation 'tech.relaycorp:cogrpc:1.1.32'
    implementation 'tech.relaycorp:cogrpc-okhttp:1.1.28'
    implementation 'tech.relaycorp:doh:1.0.21'
    testImplementation "tech.relaycorp:awala-testing:1.5.26"

    // ORM
    implementation "androidx.room:room-runtime:$roomVersion"
    kapt "androidx.room:room-compiler:$roomVersion"
    implementation "androidx.room:room-ktx:$roomVersion"

    // Preferences
    implementation 'androidx.preference:preference:1.1.1'
    implementation 'com.github.tfcporciuncula:flow-preferences:1.3.4'

    // gRPC
    implementation "io.grpc:grpc-netty:$grpcVersion"
    implementation "io.grpc:grpc-protobuf:$grpcVersion"
    implementation "io.grpc:grpc-stub:$grpcVersion"

    // Android TLS support for Netty
    implementation "io.netty:netty-handler:$nettyVersion"
    implementation 'org.conscrypt:conscrypt-android:2.5.3'
    implementation 'org.bouncycastle:bcpkix-jdk15on:1.70'

    // Display open-source licenses
    implementation "com.mikepenz:aboutlibraries:$aboutLibsVersion"

    // Testing
    testImplementation "org.junit.jupiter:junit-jupiter:$junitVersion"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$junitVersion"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$kotlinCoroutinesVersion"
    testImplementation 'org.mockito:mockito-inline:4.7.0'
    testImplementation 'com.nhaarman.mockitokotlin2:mockito-kotlin:2.2.0'
    testImplementation "io.grpc:grpc-testing:$grpcVersion"
    testImplementation "io.grpc:grpc-inprocess:$grpcVersion"

    // Instrumentation Testing
    androidTestImplementation 'androidx.test:runner:1.5.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$kotlinCoroutinesVersion"
    androidTestImplementation "io.grpc:grpc-testing:$grpcVersion"
    androidTestImplementation('androidx.test.espresso:espresso-core:3.5.1') {
        exclude group: 'com.google.protobuf'
    }
    androidTestImplementation('com.adevinta.android:barista:4.3.0') {
        exclude group: 'org.jetbrains.kotlin'
        exclude group: 'com.google.protobuf'
    }
    kaptAndroidTest 'com.google.dagger:dagger-compiler:2.43.2'
}

configurations.all {
    resolutionStrategy.eachDependency { details ->
        /*
         * Our TLS certificates are being rejected with OPENSSL_internal:NOT_ENOUGH_DATA
         * on Netty 4.1.79.Final, so we're locking its version to 4.1.78.Final until we're able to fix the
         * underlying issue
         */
        if (details.requested.group == 'io.netty') {
            details.useVersion nettyVersion
        }
    }
}

spotless {
    kotlin {
        ktlint '1.0.1'
        target '**/*.kt'
    }
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
    kotlinOptions.freeCompilerArgs += [
            '-opt-in=kotlinx.coroutines.ExperimentalCoroutinesApi',
            '-opt-in=kotlinx.coroutines.FlowPreview',
            '-opt-in=kotlin.time.ExperimentalTime'
    ]
}

play {
    enabled.set(project.findProperty("enableGpp") == "true")
    track.set("beta")
    defaultToAppBundles.set(true)
    resolutionStrategy.set(GPPResolutionStrategy.AUTO)
}
