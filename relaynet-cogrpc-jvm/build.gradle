apply plugin: 'kotlin'
apply plugin: 'com.google.protobuf'

buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath "com.google.protobuf:protobuf-gradle-plugin:$protobufGradleVersion"
    }
}

dependencies {
    implementation project(':relaynet-jvm') // TODO: remove when real version is finished

    // Kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlinVersion"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$kotlinCoroutinesVersion"

    // Relaynet
    implementation 'tech.relaycorp:relaynet:1.12.4'

    // Protobuf
    implementation "com.google.protobuf:protobuf-gradle-plugin:$protobufGradleVersion"
    implementation "com.google.protobuf:protobuf-java:$protobufVersion"
    implementation "com.google.protobuf:protobuf-java-util:$protobufVersion"

    // gRPC
    implementation "io.grpc:grpc-netty:${grpcVersion}"
    implementation "io.grpc:grpc-protobuf:${grpcVersion}"
    implementation "io.grpc:grpc-stub:${grpcVersion}"

    // Testing
    testImplementation 'org.junit.jupiter:junit-jupiter:5.6.2'
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$kotlinCoroutinesVersion"
    testImplementation "io.grpc:grpc-testing:${grpcVersion}"
    testImplementation 'io.netty:netty-tcnative-boringssl-static:2.0.30.Final'
}

sourceCompatibility = "8"
targetCompatibility = "8"

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
    kotlinOptions.freeCompilerArgs += [
            '-Xuse-experimental=kotlinx.coroutines.ExperimentalCoroutinesApi',
            '-Xuse-experimental=kotlinx.coroutines.FlowPreview',
            '-Xuse-experimental=kotlin.time.ExperimentalTime'
    ]
}

protobuf {
    protoc { artifact = "com.google.protobuf:protoc:$protobufVersion" }
    plugins {
        grpc { artifact = "io.grpc:protoc-gen-grpc-java:${grpcVersion}" }
    }
    generateProtoTasks {
        all()*.plugins { grpc {} }
    }
}

sourceSets {
    main {
        java {
            srcDirs 'build/generated/source/proto/main/grpc'
            srcDirs 'build/generated/source/proto/main/java'
        }
    }
}
